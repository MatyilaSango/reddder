import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import like from '../../images/Like.png'
import source from '../../images/source.png'

export const getServerSideProps = async (context) => {
    const {params} = context
    const {name} = params
    const res = await fetch(`https://www.reddit.com/r/${name}.json?limit=25`)
    const data = await res.json()
  
    return {
      props: {
        redData: data,
        name
      }
    }
  }
  

export default function SubRed( {redData, name} ) {

  const isMedia = (e) => {
    if(e.includes("png") || e.includes("jpg") ||e.includes("jpeg") || e.includes("gif") || e.includes("mp4")){
      return true;
    } 
    return false
  }

  const isImage = (e) => {
    if(e.includes("png") || e.includes("jpg") || e.includes("jpeg") || e.includes(".gif")){
      return true;
    } 
    return false
  }
  const isVideo = (e) => {
    if(e.includes("redgif") || e.includes("mp4") || e.includes("gifv")){
      return true;
    } 
    return false
  }

  const getMedia = (e) => {
    if(isVideo(e.url) && (typeof(e.preview.reddit_video_preview) !== "undefined")){
      return (<video src={e.preview.reddit_video_preview.fallback_url} preload='auto' controls className={styles.srcContentPic}/>)
    }
    else if(isImage(e.url) && (typeof(e.url) !== "undefined")){
      return (<img src={e.url} alt='pic' className={styles.srcContentPic}/>)
    }
    
  }

  

  return (
    <div className={styles.container}>
      <Head>
        <title>Reddder</title>
        <meta name="Find media contents. Explore and enjoy." content="Generated by create next app" />
        <link rel="icon" href="/Reddder.png" type='png' />
      </Head>

      <div className={styles.bodyContainer}>
        <p>{name}:</p>
        {((redData.error === 404) || (typeof(redData.data.children[0]) === "undefined")) ? <p>Enter a subreddit!!!</p> :
          <div className={styles.contentContainer}>
            {redData.data.children.map((child) => (
              isMedia(child.data.url) &&
              <div className={styles.contentDiv}>
                {getMedia(child.data)}
  
                <div className={styles.contentBottomFlowDiv}>
                  <div className={styles.picTitle}>
                    <div className={styles.srcPic}>
                      <a href={"https://www.reddit.com/"+child.data.permalink} target='_blank'>
                        <Image src={source} alt='pic' width={40}/>
                      </a>
                    </div>
                    <div className={styles.srcTitle}>
                      <>{child.data.title}</>
                    </div>
                  </div>
                  
                  <div className={styles.srcLikes}>
                    <Image src={like} alt='pic' width={25} />
                    <>{child.data.ups}</>
                  </div>
                </div>
                
              </div>
            ))}
          </div>
        }
      </div>
    </div>
  )
  }
