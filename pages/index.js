import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import like from '../images/Like.png'
import source from '../images/source.png'


export const getStaticProps = async () => {
  const res = await fetch("https://www.reddit.com/r/popular.json?limit=25")
  const data = await res.json()

  return {
    props: {
      redData: data
    },
    revalidate: 10,
  }
}

export default function Home({ redData }) {

  const isMedia = (e) => {
    if(isImage(e) || isVideo(e)){
      return true;
    } 
    return false
  }

  const isImage = (e) => {
    if(e.includes("png") || e.includes("jpg") ||e.includes("jpeg")){
      return true;
    } 
    return false
  }
  const isVideo = (e) => {
    if(e.includes("redgif") || e.includes("mp4") || e.includes("gifv")){
      return true;
    } 
    return false
  }

  const getMedia = (e) => {
    if(isImage(e.url) && (typeof(e.url) !== "undefined")){
      return (<img src={e.url} alt='pic' className={styles.srcContentPic}/>)
    }
    else if((isVideo(e.url) && (typeof(e.preview.reddit_video_preview) !== "undefined")) || ((e.is_video) && typeof(e.media.reddit_video.fallback_url) !== "undefined")) {
      return (<video src={(typeof(e.preview.reddit_video_preview) !== "undefined") ? e.preview.reddit_video_preview.fallback_url : e.media.reddit_video.fallback_url} 
              preload='auto' controls vol className={styles.srcContentPic}/>) 
    }
  }
  const getMediaLink = (e) => {
    return getMedia(e).props.src
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Reddder</title>
        <meta name="Find media contents. Explore and enjoy." content="Generated by create next app" />
        <link rel="icon" href="/Reddder.png" type='png' />
      </Head>

      <div className={styles.bodyContainer}>
        <p>Popular:</p>
        {(typeof(redData.data.children[0]) === "undefined") ? <p>Enter a subreddit!!!</p> :
          <div className={styles.contentContainer}>
            {redData.data.children.map((child) => (
              isMedia(child.data.url) &&
              <div className={styles.contentDiv}>
                <a href={`/Preview?l=${getMediaLink(child.data)}&t=${child.data.title}&u=${child.data.ups}&s=${"https://www.reddit.com/"+child.data.permalink}`}>
                  {getMedia(child.data)}
                </a>
  
                <div className={styles.contentBottomFlowDiv}>
                  <div className={styles.picTitle}>
                    <div className={styles.srcPic}>
                      <a href={"https://www.reddit.com/"+child.data.permalink} target='_blank'>
                        <Image src={source} alt='pic' width={40}/>
                      </a>
                    </div>
                    <div className={styles.srcTitle}>
                      <>{child.data.title}</>
                    </div>
                  </div>
                  
                  <div className={styles.srcLikes}>
                    <Image src={like} alt='pic' width={25} />
                    <>{child.data.ups}</>
                  </div>
                </div>
                
              </div>
            ))}
          </div>
        }
      </div>
    </div>
  )
}
